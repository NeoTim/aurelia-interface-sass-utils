
@function generate-card($screen: 'mobile') {
    @if $screen == 'mobile' {
        @return $card-module;
    }

    @else {
        $gutter: $card_desktop--gutter;
        $card--paddingLeft: $gutter;
        $card--paddingRight: $gutter;
        $card--padding: $card--paddingTop $card--paddingRight $card--paddingBottom $card--left;
        $module: (
            padding: $card--padding
        );
    }
    @return $module;
}

@function _card($property){
  $property: map-get($local-card-module, $property);
  @return $property;
}


@mixin ai-card-module($settings: null, $overwrite: false) {
    $settings: generate-card();
    @include export-module('a-card', $settings);
    $local-card-module: map-merge($settings, $local-card-module) !global;
    @content;
}

@import 'platform/_card.platform-web';
@import 'platform/_card.platform-ios';
@import 'platform/_card.platform-android';

@function _card($properties...){
  $property: _get($web-card-module, $properties...);
  @return $property;
}
@function _card-ios($properties...){
  $property: _get($ios-card-module, $properties...);
  @return $property;
}
@function _card-android($properties...){
  $property: _get($andoid-card-module, $properties...);
  @return $property;
}


@mixin card-base() {
  display       : inline-flex;
  flex-direction: _card('flex-direction');
  font-size     : _card('font-size');
  font-weight   : _card('font-weight');
  overflow      : _card('overflow');
  z-index       : _card('z-index');
  position      : _card('position');
  background    : _card('background');
  border-radius : _card('border-radius');
  box-sizing    : _card('box-sizing');
  width         : _card('width');
  min-height    : 0;

  &[standard] {
    min-height    : _card('min-height');
  }

  &[stretch] {
    width: 100%;
  }
}

@mixin card-title() {
  align-items        : _card('title', 'align-items');
  color              : _card('title', 'color');
  display            : _card('title', 'display');
  display            : _card('title', 'display');
  justify-content    : _card('title', 'justify-content');
  line-height        : _card('title', 'line-height');
  padding            : _card('title', 'padding');
  perspective-origin : _card('title', 'perspective-origin');
  transform-origin   : _card('title', 'transform-origin');
  box-sizing         : _card('title', 'box-sizing');
}

@mixin card-media() {
  // background-color      : _card('media', 'background-color');
  background-repeat     : _card('media', 'background-repeat');
  background-position   : _card('media', 'background-position');
  background-size       : _card('media', 'background-size');
  background-origin     : _card('media', 'background-origin');
  background-attachment : _card('media', 'background-attachment');
  box-sizing            : _card('media', 'box-sizing');
}

@mixin card-text() {
  align-self       : _card('text', 'align-self');
  color            : _card('text', 'color');
  display          : _card('text', 'display');
  display          : _card('text', 'display');
  font-size        : _card('text', 'font-size');
  font-weight      : _card('text', 'font-weight');
  line-height      : _card('text', 'line-height');
  overflow         : _card('text', 'overflow');
  transform-origin : _card('text', 'transform-origin');
  margin           : _card('text', 'margin');


  &[support] {
    color: $card-supporting-text-text-color;
    font-size: $card-supporting-text-font-size;
    line-height: $card-supporting-text-line-height;
    overflow: hidden;
    padding: $card-vertical-padding $card-horizontal-padding;
    width: 90%;
  }
}

@mixin card-actions() {
  font-size        : _card('actions', 'font-size');
  line-height      : _card('actions', 'line-height');
  width            : _card('actions', 'width');
  background-color : _card('actions', 'background-color');
  padding          : _card('actions', 'padding');
  box-sizing       : _card('actions', 'box-sizing');
}

